use strict;my $file1 = $ARGV[0];my $file2 = $ARGV[1];my $stringIndex = $ARGV[2]; # 26my $iteration = $ARGV[3];open(IN1,"<".$file1) or die "Error openning $file1 $!\n";my @tuples1 = <IN1>;close(IN1);open(IN2,"<".$file2) or die "Error openning $file2 $!\n";my @tuples2 = <IN2>;close(IN2);print "Creating dictionary...\n";open(OUT,">models/dictionaryRelations".$iteration.".dic") or die "Error creating dictionary.dic $!\n";my @DIC = ();my $in=0;foreach(@tuples1){		if ($in == 1)	{		my $tuple = $_;		my @partes = split(/,/,$tuple);		for(my $i=$stringIndex; $i<$#partes; $i++)		{			addWord($partes[$i]);		}	}	if ($_ =~ /\@DATA/i)	{		$in = 1;	}}$in=0;foreach(@tuples2){		if ($in == 1)	{		my $tuple = $_;		my @partes = split(/,/,$tuple);		for(my $i=$stringIndex; $i<$#partes; $i++)		{			addWord($partes[$i]);		}	}	if ($_ =~ /\@DATA/i)	{		$in = 1;	}}@DIC = sort(@DIC);my $prev = trim($DIC[0]);if ($prev ne ""){	print OUT $prev."\n";}my $curr = "";for(my $i=1; $i<=$#DIC; $i++){	$curr = trim($DIC[$i]);	if ($prev ne $curr)	{		print OUT $curr."\n";		$prev = $curr;	}}close(OUT);sub addWord{	my $word = lc(trim(shift));	my @temp = sort(@DIC);		$word = generalizeWord($word);		if ($word eq "class")	{		$word = "class_";	}		my $found = 0;	foreach(@temp)	{		my $w = $_;		if ($word eq $w)		{			$found = 1;			last;		}	}		if ($found == 0)	{		$word = trim($word);		$word =~ s/\s+/_/gi;		push(@DIC,$word);	}	}sub generalizeWord{	my $word = shift;		if ($word =~ /^\d+$/gi)	{		return "digit";	}	elsif ($word =~ /\d/gi)	{		return "containNumber";	}	elsif ($word =~ /\.|\,|\:|\;|\!|\?/gi)	{		return "punct";	}	elsif ($word =~ /\@|\#|\$|\%|\^|\&|\*|\(|\)|\[|\]|\{|\}|\<|\>|\"|\'|\`|\||\\|\/|\-|\=|\+|\~/gi)	{		return "symb";	}	return $word;}sub trim($){	my $string = shift;	$string =~ s/^\s+//;	$string =~ s/\s+$//;	return $string;}