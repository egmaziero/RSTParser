use strict;my $pair = $ARGV[0];my @partes = split(/\*\*\*/,$pair);my $segment1 = trim($partes[0]);my $segment2 = trim($partes[1]);my $foundRelation = 0;open(LISTVERBS,"<resources/attribVerbs.txt") or die "Error: can't open list of verbs of attribution $!\n";my @attribVerbs = <LISTVERBS>;close(LISTVERBS);parenthetical();attribution();if ($foundRelation == 0){	print "noRelationFound\n";}sub attribution{	my @words1 = split(/\s+/,$segment1);	push(@words1,split(/\s+/,$segment2));		foreach(@words1)	{		my $currTriple = trim($_);		if ($currTriple =~ /(.*?)\((.*?)\)_(.*?)$/)		{			my $word = $1;			my $lemma = $2;			my $pos = $3;			#RULE 1			foreach(@attribVerbs)			{				my $currVerb = trim(lc($_));				if (trim(lc($lemma)) eq $currVerb)				{					print "attribut";					$foundRelation = 1;				}			}			#RULE 2			if ( ((trim(lc($lemma)) eq "conforme") and ($pos eq "prp")) or ((trim(lc($lemma)) eq "segundo") and ($pos eq "prp")) or ((trim(lc($lemma)) eq "consoante") and ($pos eq "prp"))  or ((trim(lc($lemma)) eq "de acordo") and ($pos eq "adv")) )			{				print "attribut";				$foundRelation = 1;			}		}	}}sub parenthetical{	my $firstCharacter1 = substr($segment1,0,1);	my $firstCharacter2 = substr($segment2,0,1);	if (($firstCharacter1 =~ /\(|\[|\{|\-|\-\-/) or ($firstCharacter2 =~ /\(|\[|\{|\-|\-\-/))	{		print "parenthe";		$foundRelation = 1;	}}			sub trim{ my $string = shift; $string =~ s/^\s+//; $string =~ s/\s+$//; return $string;}