use strict;#analyse the resultsmy $iteration = $ARGV[0];my $instance = "5files_DT_0.5";open(LOG,">>evaluations/logConceptDrift.txt") or die "Error: cant create log Concept Drift $!\n";#get lines before add new resultopen(DAT,"<evaluations/results.log") or die "Error: cant open results.log $!\n";my @linesDAT = <DAT>;close(DAT);open(DAT,">>evaluations/results.log") or die "Error: cant create results.log $!\n";#get the new resultopen(RESULTS,"<evaluations/results".$iteration.".tmp") or die "Error: cant open results...tmp $!\n";my @lines = <RESULTS>;close(RESULTS);my $accuracy;foreach(@lines){	if ($_ =~ /^Weighted Avg/)	{		my @partes = split(/\s+/,$_);		$accuracy = trim($partes[6]);		$accuracy = trim($accuracy);	}}print DAT $iteration." ".$accuracy."\n";close(DAT);open(PLOT,">evaluations/plotagemResults.gp");	print PLOT "plot 'evaluations/results.log' using 1:2 title 'F-Score' with lines\n";	print PLOT "set terminal png\n";	print PLOT "set xlabel 'Iteration'\n";	print PLOT "set yrange [0:1]\n";	print PLOT "set output 'evaluations/curves.png'\n";	print PLOT "replot\n";close(PLOT);system("gnuplot evaluations/plotagemResults.gp");system("cp evaluations/curves.png /var/www/tmp/learningCurve".$instance.".png");## Error Monitoring##Search for the best accuracymy $best = 0;my $back = -1;foreach(@linesDAT){	my @curr = split(/\s+/,trim($_));	if ($curr[1] >= $best)	{		$best = $curr[1];		$back = $curr[0];	}}#if degradation detectedif ($accuracy < $best){	#copy the previous model	system("cp models/data/previous/featuresRelation".$back.".arff models/data/featuresRelation.arff");	system("cp models/data/previous/featuresRelation".$back.".arff_converted.arff models/data/featuresRelation.arff_converted.arff" );	system("cp models/data/previous/DTRelationsModel".$back.".model models/DTRelationsModel.model");	system("cp models/data/previous/dictionaryRelations".$back.".dic models/dictionaryRelations.dic");			#optimizing disk space	opendir (DIR, "models/data/previous") or die "Error: can't open directory models/data/previous $!\n";	my @listData = grep {(!(/^\./))} readdir (DIR);	closedir (DIR);	foreach(@listData)	{		my $exception1 = "Relation".$back.".arff";		my $exception2 = "Relations".$back.".dic";		my $exception3 = "Model".$back.".model";		if (($_ =~ /$exception1/) or ($_ =~ /$exception2/) or ($_ =~ /$exception3/)){print $_;}		else		{			unlink("models/data/previous/".$_);		}	}		opendir (DIR, "evaluations") or die "Error: can't open directory evaluations $!\n";	@listData = grep {(!(/^\./))} readdir (DIR);	closedir (DIR);	foreach(@listData)	{		my $exception1 = "results\.log";		my $exception2 = "Concept";		my $exception3 = "testSet";		my $exception4 = "curve";		if (($_ =~ /$exception1/) or ($_ =~ /$exception2/) or ($_ =~ /$exception3/)or ($_ =~ /$exception4/)){print $_;}		else		{			unlink("evaluations/".$_);		}	}		print LOG "Turned back at $iteration from $accuracy to $best ($back)\n";}close(LOG);system("rm -Rf temp/");system("mkdir temp");sub trim($){	my $string = shift;	$string =~ s/^\s+//;	$string =~ s/\s+$//;	return $string;}